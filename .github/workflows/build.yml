name: Build YaD

on:
  push:
    branches:
      - dev

concurrency:
  group: "tauriapp-build-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Rust dependencies 
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: rust-cache-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            rust-cache-${{ runner.os }}-

      - name: Cache Rust build artifacts
        uses: actions/cache@v3
        with:
          path: src-tauri/target
          key: rust-build-${{ runner.os }}-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            rust-build-${{ runner.os }}-

      - name: Cache node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-modules-${{ runner.os }}-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ runner.os == 'windows-latest' && 'x86_64-pc-windows-msvc' || '' }}
          override: true

      - name: Install nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install npm dependencies
        run: npm install

      - name: Install Tauri CLI and Cross
        run: |
          cargo install tauri-cli
          cargo install cross

      - name: Setup cross compilation
        run: rustup target add ${{ matrix.arch }}-unknown-linux-gnu ${{ matrix.arch }}-pc-windows-msvc ${{ matrix.arch }}-apple-darwin

      - name: Building YaD app for ${{ matrix.os }} and ${{ matrix.arch }}
        run: ls -lh

